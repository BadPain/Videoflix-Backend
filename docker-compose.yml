services:

  db:
    image: postgres:latest
    container_name: videoflix_database
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: videoflix_redis
    volumes:
      - redis_data:/data

  web:
    build:
      context: .
      dockerfile: backend.Dockerfile
    env_file: .env
    container_name: videoflix_backend
    networks:
      - custom_net
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - .:/app
      - videoflix_media:/app/media
      - videoflix_static:/app/static
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    command: >
      sh -c "echo '‚è≥ Warte auf Postgres...' && sleep 5 &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

volumes:
  postgres_data:
  redis_data:
  videoflix_media:
  videoflix_static:


networks:
  custom_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16